Format: Function Definition
def noop1() {}
def noop2() {return;}
def noop3() {return null;}
def print_if_bool(val)
{
   if val == true | val == false {
    print val;
  } else {
    print 5;
  }
  }
def make_mac(factor, scalar)
{
  def multiply_and_accumulate(value)
  {
    return factor * value + scalar;
  }

   return multiply_and_accumulate;
  }

Format: Function call
twelve = 3 * four();
forty1 = forty(1);
print max(1, 2, 3, four());


def make_mac(factor, scalar)
{
  def multiply_and_accumulate(value)
  {
    return factor * value + scalar;
  }
}

old lexer;
x = 89
n = 0
 
while(x > 1)
{
   print x
   if x % 2 == 0
   {
     x = x / 2
   }
   else
   {
     x = x * 3 + 1
   }
 
   n = n + 1
 }
 
 print n